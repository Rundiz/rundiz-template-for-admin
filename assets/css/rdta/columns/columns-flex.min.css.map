{"version":3,"sources":["../../../../assets/scss/columns/rdta/columns/columns-flex.scss","../../../../assets/scss/columns/rdta/columns/_mixins.scss"],"names":[],"mappings":"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","file":"columns-flex.min.css","sourcesContent":["/*!\r\n* ----------------------------------------------------------------------------------------------\r\n* Rundiz template columns flex -- for put columns layout inside the main page layout.\r\n* ----------------------------------------------------------------------------------------------\r\n*/\r\n\r\n\r\n@import '../global-common/_common-variables';\r\n@import '_mixins';\r\n\r\n\r\n.rd-columns-flex-container {\r\n    align-items: stretch;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    // .rd-columns-flex-container.fix-columns-container-edge\r\n    &.fix-columns-container-edge {\r\n        margin-left: -$block-element-margin-sides;\r\n        margin-right: -$block-element-margin-sides;\r\n    }\r\n\r\n    // .rd-columns-flex-container .column(flexible columns)\r\n    .column {\r\n        align-self: flex-start;\r\n        flex-basis: 0;\r\n        flex-grow: 1;\r\n        flex-shrink: 1;\r\n        min-width: 0;// fix table push column over screen.\r\n        padding: 0 $block-element-margin-sides;\r\n    }\r\n\r\n    // .rd-columns-flex-container .column-break\r\n    .column-break {\r\n        flex-basis: 100%;\r\n        page-break-after: always;\r\n    }\r\n\r\n    // fixed columns (12 max) --------------------------------------------------------------\r\n    // .rd-columns-flex-container [class*=\"col-\"]\r\n    [class*=\"col-\"] {\r\n        // .rd-columns-flex-container [class*=\"col-\"]:nth-child(12)\r\n        &:nth-child(12) {\r\n            page-break-after: always;\r\n        }\r\n    }\r\n\r\n    // .rd-columns-flex-container [class*=\"col-sm\"],\r\n    // .rd-columns-flex-container [class*=\"col-md\"],\r\n    // .rd-columns-flex-container [class*=\"col-lg\"],\r\n    // .rd-columns-flex-container [class*=\"col-xl\"]\r\n    // break all other sizes than xs to full column and then let it size in @media query.\r\n    [class*=\"col-sm-\"],\r\n    [class*=\"col-md-\"],\r\n    [class*=\"col-lg-\"],\r\n    [class*=\"col-xl-\"] {\r\n        flex: 0 0 100%;\r\n        max-width: 100%;\r\n    }\r\n\r\n    // .rd-columns-flex-container .col-xs-[1-12]\r\n    @include columns-flex-12('xs');\r\n\r\n    @media (min-width: $sm-min-width) {\r\n        // .rd-columns-flex-container .col-sm-[1-12]\r\n        @include columns-flex-12('sm');\r\n    }\r\n    @media (min-width: $md-min-width) {\r\n        // .rd-columns-flex-container .col-md-[1-12]\r\n        @include columns-flex-12('md');\r\n    }\r\n    @media (min-width: $lg-min-width) {\r\n        // .rd-columns-flex-container .col-lg-[1-12]\r\n        @include columns-flex-12('lg');\r\n    }\r\n    @media (min-width: $xl-min-width) {\r\n        // .rd-columns-flex-container .col-xl-[1-12]\r\n        @include columns-flex-12('xl');\r\n    }\r\n\r\n    // .rd-columns-flex-container .offset-xs-[1-12]\r\n    @include offset-flex-12('xs');\r\n    \r\n    @media (min-width: $sm-min-width) {\r\n        // .rd-columns-flex-container .offset-sm-[1-12]\r\n        @include offset-flex-12('sm');\r\n    }\r\n    @media (min-width: $md-min-width) {\r\n        // .rd-columns-flex-container .offset-md-[1-12]\r\n        @include offset-flex-12('md');\r\n    }\r\n    @media (min-width: $lg-min-width) {\r\n        // .rd-columns-flex-container .offset-lg-[1-12]\r\n        @include offset-flex-12('lg');\r\n    }\r\n    @media (min-width: $xl-min-width) {\r\n        // .rd-columns-flex-container .offset-xl-[1-12]\r\n        @include offset-flex-12('xl');\r\n    }\r\n    // end fixed columns --------------------------------------------------------------------\r\n}","//mixins for columns flex only.\r\n\r\n\r\n@mixin columns-flex-12($size) {\r\n    @for $i from 1 through 12 {\r\n        .col-#{$size}-#{$i} {\r\n            flex: 0 0 (100% / 12) * $i;\r\n            max-width: (100% / 12) * $i;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@mixin offset-flex-12($size) {\r\n    @for $i from 1 through 12 {\r\n        .offset-#{$size}-#{$i} {\r\n            margin-left: (100% / 12) * $i;\r\n        }\r\n    }\r\n}"]}