{"version":3,"sourceRoot":"","sources":["../../../scss/rdta/columns/columns-flex.scss","../../../scss/rdta/columns/_mixins.scss"],"names":[],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;EACI;EACA;EACA;;AAGA;EACI;EACA;;AAIJ;EACI;EACA;EACA;EACA;EACA;EACA;;AAIJ;EACI;EACA;;AAOA;EACI;;AASR;AAAA;AAAA;AAAA;EAII;EACA;;ACjDA;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;AAFJ;EACI;EACA;;ADqDR;ECvDI;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;;ADyDR;EC3DI;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;;AD6DR;EC/DI;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;;ADiER;ECnEI;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;EAFJ;IACI;IACA;;;AAQJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;ADgER;ECjEI;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;;ADoER;ECrEI;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;;ADwER;ECzEI;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;;AD4ER;EC7EI;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI;;EADJ;IACI","sourcesContent":["/*!\r\n* ----------------------------------------------------------------------------------------------\r\n* Rundiz template columns flex -- for put columns layout inside the main page layout.\r\n* ----------------------------------------------------------------------------------------------\r\n*/\r\n\r\n\r\n@import '../global-common/_common-variables';\r\n@import '_mixins';\r\n\r\n\r\n.rd-columns-flex-container {\r\n    align-items: stretch;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    // .rd-columns-flex-container.fix-columns-container-edge\r\n    &.fix-columns-container-edge {\r\n        margin-left: calc(var(--block-element-margin-horizontal) * -1);\r\n        margin-right: calc(var(--block-element-margin-horizontal) * -1);\r\n    }\r\n\r\n    // .rd-columns-flex-container .column(flexible columns)\r\n    .column {\r\n        align-self: flex-start;\r\n        flex-basis: 0;\r\n        flex-grow: 1;\r\n        flex-shrink: 1;\r\n        min-width: 0;// fix table push column over screen.\r\n        padding: 0 var(--block-element-padding-horizontal);\r\n    }\r\n\r\n    // .rd-columns-flex-container .column-break\r\n    .column-break {\r\n        flex-basis: 100%;\r\n        page-break-after: always;\r\n    }\r\n\r\n    // fixed columns (12 max) --------------------------------------------------------------\r\n    // .rd-columns-flex-container [class*=\"col-\"]\r\n    [class*=\"col-\"] {\r\n        // .rd-columns-flex-container [class*=\"col-\"]:nth-child(12)\r\n        &:nth-child(12) {\r\n            page-break-after: always;\r\n        }\r\n    }\r\n\r\n    // .rd-columns-flex-container [class*=\"col-sm\"],\r\n    // .rd-columns-flex-container [class*=\"col-md\"],\r\n    // .rd-columns-flex-container [class*=\"col-lg\"],\r\n    // .rd-columns-flex-container [class*=\"col-xl\"]\r\n    // break all other sizes than xs to full column and then let it size in @media query.\r\n    [class*=\"col-sm-\"],\r\n    [class*=\"col-md-\"],\r\n    [class*=\"col-lg-\"],\r\n    [class*=\"col-xl-\"] {\r\n        flex: 0 0 100%;\r\n        max-width: 100%;\r\n    }\r\n\r\n    // .rd-columns-flex-container .col-xs-[1-12]\r\n    @include columns-flex-12('xs');\r\n\r\n    @media (min-width: $sm-min-width) {\r\n        // .rd-columns-flex-container .col-sm-[1-12]\r\n        @include columns-flex-12('sm');\r\n    }\r\n    @media (min-width: $md-min-width) {\r\n        // .rd-columns-flex-container .col-md-[1-12]\r\n        @include columns-flex-12('md');\r\n    }\r\n    @media (min-width: $lg-min-width) {\r\n        // .rd-columns-flex-container .col-lg-[1-12]\r\n        @include columns-flex-12('lg');\r\n    }\r\n    @media (min-width: $xl-min-width) {\r\n        // .rd-columns-flex-container .col-xl-[1-12]\r\n        @include columns-flex-12('xl');\r\n    }\r\n\r\n    // .rd-columns-flex-container .offset-xs-[1-12]\r\n    @include offset-flex-12('xs');\r\n    \r\n    @media (min-width: $sm-min-width) {\r\n        // .rd-columns-flex-container .offset-sm-[1-12]\r\n        @include offset-flex-12('sm');\r\n    }\r\n    @media (min-width: $md-min-width) {\r\n        // .rd-columns-flex-container .offset-md-[1-12]\r\n        @include offset-flex-12('md');\r\n    }\r\n    @media (min-width: $lg-min-width) {\r\n        // .rd-columns-flex-container .offset-lg-[1-12]\r\n        @include offset-flex-12('lg');\r\n    }\r\n    @media (min-width: $xl-min-width) {\r\n        // .rd-columns-flex-container .offset-xl-[1-12]\r\n        @include offset-flex-12('xl');\r\n    }\r\n    // end fixed columns --------------------------------------------------------------------\r\n}","@use 'sass:math';\r\n\r\n\r\n//mixins for columns flex only.\r\n\r\n\r\n@mixin columns-flex-12($size) {\r\n    @for $i from 1 through 12 {\r\n        .col-#{$size}-#{$i} {\r\n            flex: 0 0 math.div(100%, 12) * $i;\r\n            max-width: math.div(100%, 12) * $i;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@mixin offset-flex-12($size) {\r\n    @for $i from 1 through 12 {\r\n        .offset-#{$size}-#{$i} {\r\n            margin-left: math.div(100%, 12) * $i;\r\n        }\r\n    }\r\n}"]}