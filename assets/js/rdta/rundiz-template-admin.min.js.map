{"version":3,"sources":["rundiz-template-admin.js"],"names":["RundizTemplateAdmin","[object Object]","document","addEventListener","event","dropdownElements","querySelectorAll","index","length","style","display","thisTarget","currentTarget","activeElement","thisParent","parentElement","classList","contains","popperPlacement","dataset","placement","replace","dropdownElement","querySelector","Popper","createPopper","thisObj","jQuery","alertBox","closest","add","setTimeout","parentNode","removeChild","forEach","item","parent","wrap","createElement","appendChild","reset","replaceWith","key","toLowerCase","itsInputFile","focus","click","target","attributes","type","nodeValue","inputFileElement","names","i","files","push","name","elementSiblings","children","thisFilesQueue","thisResetButton","innerHTML","innerText","join","insertAdjacentHTML","dispatchEvent","CustomEvent","bubbles","detail","undefined","table","thisChecked","checked","$","noConflict","thisElement","toggleIcons","toggleIcon","toggleClass","toggle","$navbar","on","show.smapi","e","menu","this","data","isCollapsible","offset","top","window","scrollTop","outerHeight","stop","animate","hideAll.smapi","thisRdInputFile","thisSiblings","togglerButton","dataTarget","matches","stickySidebar","bottomSpacing","containerSelector","innerWrapperSelector","minWidth","resizeSensor","topSpacing","bind","obj","$item","$sub","dataSM","is","itemActivate","css","smartmenus","collapsibleHideDuration","collapsibleHideFunction","collapsibleShowDuration","collapsibleShowFunction","hideDuration","hideFunction","keepHighlighted","markCurrentItem","markCurrentTree","noMouseOver","showDuration","showFunction","subIndicators","$togglerButton","$target","removeClass","subIndicatorsPos","subMenusSubOffsetY","rdtaClass","smartMenusNavbar","smartMenusSidebar","sidebarToggler","sidebarExpandToggler","sidebarStickyMenu","hotfixLongSidebarSubmenus","buttonDropdown","dataTableToggleRow","customInputFile"],"mappings":"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","file":"rundiz-template-admin.min.js","sourcesContent":["/*! Rundiz template for admin v 2.1.8 \nLicense: MIT*//*! Rundiz template for admin\n * https://rundiz.com\n * @license MIT\n */\n\n\nclass RundizTemplateAdmin {\n\n\n    /**\n     * Listen to button dropdown or button group with dropdown.\n     * \n     * This method can work on dynamically insert/update elements.\n     * \n     * @return {undefined}\n     */\n    buttonDropdown() {\n        // listen on click anywhere/outside to hide dropdown.\n        document.addEventListener('click', function(event) {\n            // on click anywhere in document.\n            // just hide dropdown (including click in dropdown and link worked).\n            // to hide only if click outside dropdown, add `if (!event.target.closest('.rd-dropdown')) {...}` condition.\n            let dropdownElements = document.querySelectorAll('.rd-dropdown');\n            let index = 0, length = dropdownElements.length;\n            for ( ; index < length; index++) {\n                dropdownElements[index].style.display = 'none';\n            }\n            //console.log('hide dropdown');\n        });\n\n        // listen on click dropdown toggler to activate it.\n        document.addEventListener('click', function(event) {\n            let thisTarget = event.currentTarget.activeElement;\n            let thisParent = (typeof(thisTarget.parentElement) !== 'undefined' ? thisTarget.parentElement : {});\n            if (\n                thisTarget &&\n                thisParent.classList.contains('rd-button-group') &&\n                thisTarget.classList.contains('dropdown-toggler')\n            ) {\n                // if parent of clicking button contain `.rd-button-group` class.\n                // and the clicking button contain `.dropdown-toggler` class.\n                let popperPlacement;\n                if (typeof(thisTarget.dataset.placement) !== 'undefined' && thisTarget.dataset.placement) {\n                    popperPlacement = thisTarget.dataset.placement;\n                    popperPlacement = popperPlacement.replace('top left', 'top start');\n                    popperPlacement = popperPlacement.replace('top right', 'top end');\n                    popperPlacement = popperPlacement.replace('bottom left', 'bottom start');\n                    popperPlacement = popperPlacement.replace('bottom right', 'bottom end');\n                    popperPlacement = popperPlacement.replace('left top', 'left start');\n                    popperPlacement = popperPlacement.replace('left bottom', 'left end');\n                    popperPlacement = popperPlacement.replace('right top', 'right start');\n                    popperPlacement = popperPlacement.replace('right bottom', 'right end');\n                    popperPlacement = popperPlacement.replace('auto left', 'auto start');\n                    popperPlacement = popperPlacement.replace('auto right', 'auto end');\n                    popperPlacement = popperPlacement.replace(' ', '-');\n                } else {\n                    popperPlacement = 'bottom-start';\n                }\n\n                let dropdownElement = thisParent.querySelector('.rd-dropdown');\n                if (dropdownElement !== null) {\n                    //console.log('activating dropdown');\n                    dropdownElement.style.display = 'block';\n                    Popper.createPopper(\n                        thisTarget,\n                        dropdownElement,\n                        {\n                            'placement': popperPlacement\n                        }\n                    );\n                }\n            }\n        });\n    }// buttonDropdown\n\n\n    /**\n     * Close alertbox.\n     * \n     * Example:\n     * <pre>\n     * &lt;button type=&quot;button&quot; onclick=&quot;return RundizTemplateAdmin.closeAlertbox(jQuery(this));&quot;&gt;x&lt;/button&gt;\n     * </pre>\n     * Or you can use JS `this` object instead.\n     * <pre>\n     * &lt;button type=&quot;button&quot; onclick=&quot;return RundizTemplateAdmin.closeAlertbox(this);&quot;&gt;x&lt;/button&gt;\n     * </pre>\n     * \n     * @param {object} thisObj `jQuery(this)` or `this`.\n     * @returns {Boolean}\n     */\n    static closeAlertbox(thisObj) {\n        if (thisObj instanceof jQuery) {\n            thisObj = thisObj[0];\n        }\n\n        if (typeof(thisObj) !== 'undefined') {\n            let alertBox = thisObj.closest('.rd-alertbox');\n            if (alertBox) {\n                alertBox.classList.add('rd-animation','fade', 'fade-out');\n                setTimeout(function() {\n                    alertBox.parentNode.removeChild(alertBox);\n                }, 400);\n            }\n        }\n\n        return false;\n    }// closeAlertbox\n\n\n    /**\n     * Activate custom input file.\n     * \n     * This method can work on dynamically insert/update elements.\n     * \n     * @link http://demo.rundiz.com/nice-form-plugins/ Reference\n     * @returns {undefined}\n     */\n    customInputFile() {\n        // reset form cached after reload. this always happen in Firefox.\n        document.querySelectorAll('.rd-inputfile input[type=\"file\"]').forEach(function(item, index) {\n            // wrap with <form>\n            // @link https://stackoverflow.com/a/25488670/128761 Original source code.\n            let parent = item.parentElement;\n            let wrap = document.createElement('form');\n            wrap.appendChild(item);\n            parent.appendChild(wrap);\n            // reset form.\n            item.closest('form').reset();\n            // unwrap <form>\n            item.parentNode.replaceWith(item);\n        });\n\n        // for navigate thru web page using keyboard.\n        // (press tab to custom input file and then press enter for browse file.)\n        document.addEventListener('keyup', function(event) {\n            if (\n                typeof(event.key) !== 'undefined' &&\n                event.key.toLowerCase() === 'enter' &&\n                event.currentTarget &&\n                event.currentTarget.activeElement &&\n                event.currentTarget.activeElement.classList.contains('rd-inputfile')\n            ) {\n                let thisTarget = event.currentTarget.activeElement;\n                let itsInputFile = thisTarget.querySelector('input[type=\"file\"]');\n                if (typeof(itsInputFile) !== 'undefined' && itsInputFile) {\n                    itsInputFile.focus();\n                    itsInputFile.click();// this maybe stuck at popup blocked in Firefox. allowed popup for certain site and this will be working fine.\n                }\n            }\n        });\n\n        // display selected file name and remove button.\n        document.addEventListener('change', function(event) {\n            if (\n                event.target.attributes &&\n                event.target.attributes.type &&\n                event.target.attributes.type.nodeValue === 'file' &&\n                event.target.parentElement.classList.contains('rd-inputfile')\n            ) {\n                let inputFileElement = event.target;\n                let thisParent = inputFileElement.parentElement;\n                let names = [];\n                for (let i = 0; i < inputFileElement.files.length; ++i) {\n                    names.push(inputFileElement.files[i].name);\n                }\n\n                // get input files queue element.\n                // get reset button template.\n                let elementSiblings = thisParent.parentNode.children;\n                for (let i = 0; i < elementSiblings.length; i++) {\n                    if (elementSiblings[i].classList.contains('rd-input-files-queue') && typeof(thisFilesQueue) === 'undefined') {\n                        var thisFilesQueue = elementSiblings[i];\n                    }\n                    if (elementSiblings[i].classList.contains('rd-inputfile-reset-button') && typeof(thisResetButton) === 'undefined') {\n                        var thisResetButton = elementSiblings[i].innerHTML;\n                    }\n                }\n\n                if (typeof(thisFilesQueue) !== 'undefined') {\n                    thisFilesQueue.innerText = names.join(', ');\n                    if (typeof(thisResetButton) !== 'undefined' && thisResetButton) {\n                        thisFilesQueue.insertAdjacentHTML('beforeend', ' ' + thisResetButton);\n                        inputFileElement.dispatchEvent(new CustomEvent('rdta.custominputfile.addedfilesqueue', {bubbles: true, detail: event.target}));\n                    }\n                }\n\n                inputFileElement.dispatchEvent(new CustomEvent('rdta.custominputfile.change', {bubbles: true, detail: event.target}));\n\n                inputFileElement = undefined;\n                thisFilesQueue = undefined;\n                thisResetButton = undefined;\n                elementSiblings = undefined;\n            }\n        });\n    }// customInputFile\n\n\n    /**\n     * Toggle all checkbox in a table.\n     * \n     * Example:\n     * <pre>\n     * &lt;input type=&quot;checkbox&quot; onclick=&quot;RundizTemplateAdmin.dataTableCheckboxToggler(jQuery(this));&quot;&gt;\n     * </pre>\n     * Or you can use JS `this` object instead.\n     * <pre>\n     * &lt;input type=&quot;checkbox&quot; onclick=&quot;RundizTemplateAdmin.dataTableCheckboxToggler(this);&quot;&gt;\n     * </pre>\n     * \n     * @param {object} thisObj `jQuery(this)` or `this`.\n     * @returns {undefined}\n     */\n    static dataTableCheckboxToggler(thisObj) {\n        if (thisObj instanceof jQuery) {\n            thisObj = thisObj[0];\n        }\n\n        if (typeof(thisObj) !== 'undefined') {\n            let table = thisObj.closest('table');\n            let thisChecked = thisObj.checked;\n            table.querySelectorAll('input[type=\"checkbox\"]').forEach(function(item, index) {\n                item.checked = thisChecked;\n            });\n        }\n    }// dataTableCheckboxToggler\n\n\n    /**\n     * For data table responsive to toggle collapse/expand in mini screen.\n     * \n     * This method can work on dynamically insert/update elements.\n     * \n     * @returns {Boolean}\n     */\n    dataTableToggleRow() {\n        let $ = jQuery.noConflict();\n\n        document.addEventListener('click', function(event) {\n            if (\n                event.currentTarget.activeElement &&\n                event.currentTarget.activeElement.classList.contains('toggle-row')\n            ) {\n                let thisElement = event.currentTarget.activeElement;\n                let toggleIcons = (thisElement ? thisElement.querySelector('.faicon').dataset.toggleIcon : '');\n                if (toggleIcons) {\n                    $(thisElement.querySelectorAll('.faicon')).toggleClass(toggleIcons);// non jQuery cannot toggle multiple class names.\n                    thisElement.closest('tr').classList.toggle('is-expanded');\n                }\n            }\n        });\n\n        return false;\n    }// dataTableToggleRow\n\n\n    /**\n     * Hot fix long sidebar submenus is under top navbar.\n     * \n     * @link https://github.com/vadikom/smartmenus/issues/95\n     * @return {undefined}\n     */\n    hotfixLongSidebarSubmenus() {\n        let $ = jQuery.noConflict();\n        let $navbar = $('.rd-navbar');\n\n        $('.rd-sidebar-item-list').on({\n            'show.smapi': function (e, menu) {\n                let obj = $(this).data('smartmenus');\n                if (!obj.isCollapsible()) {\n                    if ($(menu).offset().top - $(window).scrollTop() < $navbar.outerHeight()) {\n                        $navbar.stop(true).animate({top: -100}, 250);\n                    }\n                }\n            },\n            'hideAll.smapi': function (e, menu) {\n                let obj = $(this).data('smartmenus');\n                if (!obj.isCollapsible()) {\n                    $navbar.stop(true).animate({top: 0}, 250);\n                }\n            }\n        });\n    }// hotfixLongSidebarSubmenus\n\n\n    /**\n     * Reset input file.\n     * \n     * Example:\n     * <pre>\n     * &lt;button type=&quot;button&quot; onclick=&quot;return RundizTemplateAdmin.resetInputFile(jQuery(this));&quot;&gt;x&lt;/button&gt;\n     * </pre>\n     * Or you can use JS `this` object instead.\n     * <pre>\n     * &lt;button type=&quot;button&quot; onclick=&quot;return RundizTemplateAdmin.resetInputFile(this);&quot;&gt;x&lt;/button&gt;\n     * </pre>\n     * \n     * @link http://demo.rundiz.com/nice-form-plugins/ Reference\n     * @param {object} thisObj `jQuery(this)` or `this`.\n     * @returns {undefined}\n     */\n    static resetInputFile(thisObj) {\n        if (thisObj instanceof jQuery) {\n            thisObj = thisObj[0];\n        }\n\n        if (typeof(thisObj) !== 'undefined') {\n            let thisFilesQueue = thisObj.closest('.rd-input-files-queue');\n            let thisSiblings = (thisFilesQueue.parentElement ? thisFilesQueue.parentElement.children : []);\n            let thisRdInputFile;\n            for (let i = 0; i < thisSiblings.length; i++) {\n                if (thisSiblings[i].classList.contains('rd-inputfile')) {\n                    thisRdInputFile = thisSiblings[i];\n                    break;\n                }\n            }\n\n            if (thisRdInputFile) {\n                let target = thisRdInputFile.querySelector('input[type=\"file\"]');\n                let parent = target.parentElement;\n                let wrap = document.createElement('form');\n                wrap.appendChild(target);\n                parent.appendChild(wrap);\n                // reset form.\n                target.closest('form').reset();\n                // unwrap <form>\n                target.parentNode.replaceWith(target);\n            }\n        }\n\n        thisObj.closest('.rd-input-files-queue').innerHTML = '';\n\n        return false;\n    }// resetInputFile\n\n\n    /**\n     * Listen to sidebar expand/collapse toggler button.\n     * \n     * This method can work on dynamically insert/update elements.<br>\n     * This till toggle expand & collapse, not push/pull (or show/hide).\n     * \n     * @returns {Boolean}\n     */\n    sidebarExpandToggler() {\n        let $ = jQuery.noConflict();\n\n        let togglerButton = document.querySelector('.rd-sidebar-expand-collapse-controls a');\n        let dataTarget = (togglerButton ? togglerButton.dataset.target : '');\n\n        if (!dataTarget) {\n            return false;\n        }\n\n        document.addEventListener('click', function(event) {\n            // match selector.\n            // @link https://stackoverflow.com/a/25248515/128761 Original source code.\n            for (let target= event.target; target && target != this; target = target.parentNode) {\n                // loop parent nodes from the target to the delegation node\n                if (target.matches('.rd-sidebar-expand-collapse-controls a')) {\n                    let toggleIcon = togglerButton.querySelector('.faicon').dataset.toggleIcon;\n                    $(togglerButton.querySelector('.faicon')).toggleClass(toggleIcon);// non jQuery cannot toggle multiple class names.\n\n                    document.querySelector(dataTarget).classList.toggle('is-collapsed');\n                    setTimeout(function() {\n                        $('.rd-sidebar').stickySidebar('updateSticky');// require jQuery.\n                    }, 100);\n                    break;\n                }\n            }\n        });\n\n        return false;\n    }// sidebarExpandToggler\n\n\n    /**\n     * Activate sidebar sticky menu on scroll.\n     * \n     * @returns {undefined}\n     */\n    sidebarStickyMenu() {\n        let $ = jQuery.noConflict();\n\n        $('.rd-sidebar').stickySidebar({\n            bottomSpacing: 50,// fix Firefox scroll down and auto jump to top.\n            containerSelector: '.rd-page-wrapper',\n            innerWrapperSelector: '.rd-sidebar-inner',\n            minWidth: 999,// minimum sidebar breakpoint.\n            resizeSensor: true,\n            topSpacing: 50,// should be header/navbar height that is not on small screen (small screen header height is 100).\n        });\n    }// sidebarStickyMenu\n\n\n    /**\n     * Listen to sidebar toggler button (small screen).\n     * \n     * This method can work on dynamically insert/update elements.<br>\n     * This will toggle push/pull (or show/hide) sidebar menu in the small screen, not expand/collapse (shorten).\n     * \n     * @returns {Boolean}\n     */\n    sidebarToggler() {\n        let togglerButton = document.querySelector('.rd-sidebar-toggler');\n        let dataTarget = (togglerButton ? togglerButton.dataset.target : '');\n\n        if (!dataTarget) {\n            return false;\n        }\n\n        document.addEventListener('click', function(event) {\n            // match selector.\n            // @link https://stackoverflow.com/a/25248515/128761 Original source code.\n            for (let target= event.target; target && target != this; target = target.parentNode) {\n                // loop parent nodes from the target to the delegation node\n                if (target.matches('.rd-sidebar-toggler')) {\n                    target.classList.toggle('is-active');\n\n                    document.querySelector(dataTarget).classList.toggle('mini-screen-sidebar-visible');\n                    break;\n                }\n            }\n        });\n    }// sidebarToggler\n\n\n    /**\n     * Activate navbar smart menus\n     * \n     * @returns {undefined}\n     */\n    smartMenusNavbar() {\n        let $ = jQuery.noConflict();\n\n        // tweak to show only one menu at a time. ( https://www.smartmenus.org/forums/topic/accordion-failed/#post-2660 )\n        // this problem occur on small screen navbar menu. so, this can fix it.\n        $('.sm-rdta.navbar').bind('click.smapi', function (e, item) {\n            let obj = $(this).data('smartmenus');\n            if (obj.isCollapsible()) {\n                let $item = $(item),\n                    $sub = $item.dataSM('sub');\n                if ($sub && !$sub.is(':visible')) {\n                    obj.itemActivate($item, true);\n                    return false;\n                }\n            }\n        });\n\n        // tweak to let sub menu dropdown works on small screen. (it doesn't work by default.)\n        $('.sm-rdta.navbar').bind('show.smapi', function(e, item) {\n            $(item).css('position', 'absolute');\n            // do not align my submenu position.\n            $(item).css('left', '');\n            $(item).css('top', '');\n        });\n        $('.sm-rdta.navbar').bind('hide.smapi', function(e, item) {\n            $(item).css('position', '');\n        });\n\n        // activate smartmenus on navbar.\n        $('.sm-rdta.navbar').smartmenus({\n            collapsibleHideDuration: 0,\n            collapsibleHideFunction: null,\n            collapsibleShowDuration: 0,\n            collapsibleShowFunction: 0,\n            hideDuration: 0,\n            hideFunction: null,\n            keepHighlighted: false,\n            markCurrentItem: false,\n            markCurrentTree: false,\n            noMouseOver: true,\n            showDuration: 0,\n            showFunction: null,\n            subIndicators: false,\n        });\n\n        $('.sm-rdta.navbar').on('show.smapi', function() {\n            // navbar submenu on show\n            // hide sidebar on small screen.\n            // see reference on `rdtaSidebarToggler()` function.\n            let $togglerButton = $('.rd-sidebar-toggler');\n            let $target = $togglerButton.data('target');\n\n            $togglerButton.removeClass('is-active');\n            $($target).removeClass('mini-screen-sidebar-visible');\n        });\n    }// smartMenusNavbar\n\n\n    /**\n     * Activate sidebar smart menus.\n     * \n     * @returns {undefined}\n     */\n    smartMenusSidebar() {\n        let $ = jQuery.noConflict();\n\n        $('.sm-vertical').smartmenus({\n            markCurrentItem: true,\n            markCurrentTree: true,\n            noMouseOver: true,\n            subIndicatorsPos: 'append',\n            subMenusSubOffsetY: -1,// border top contain 1 px\n        });\n    }// smartMenusSidebar\n\n\n}// RundizTemplateAdmin\n\n\n// run on page loaded ----------------------------------------------------------------------\ndocument.addEventListener('DOMContentLoaded',function() {\n    let rdtaClass = new RundizTemplateAdmin();\n    // activate navbar smart menus.\n    rdtaClass.smartMenusNavbar();\n\n    // sidebar functions -----------------------------------------------\n    // activate sidebar smart menus.\n    rdtaClass.smartMenusSidebar();\n    // listen to sidebar menu toggler button for small screen.\n    rdtaClass.sidebarToggler();\n    // listen to sidebar expand/collapse toggler button.\n    rdtaClass.sidebarExpandToggler();\n    // activate sidebar sticky menu.\n    rdtaClass.sidebarStickyMenu();\n    // end sidebar functions ------------------------------------------\n\n    // hotfix long sidebar sub menus.\n    rdtaClass.hotfixLongSidebarSubmenus();\n\n    // listen to button with dropdown.\n    rdtaClass.buttonDropdown();\n\n    // listen to data table responsive toggle collapse/expand.\n    rdtaClass.dataTableToggleRow();\n\n    // activate custom input file.\n    rdtaClass.customInputFile();\n    //rdtaInputFile();\n});"]}