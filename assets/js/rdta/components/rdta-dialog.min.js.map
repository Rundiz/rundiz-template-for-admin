{"version":3,"sources":["components/rdta-dialog.js"],"names":["RDTADialog","[object Object]","selector","thisClass","this","dialogOrModalElement","document","querySelector","classList","contains","body","add","setTimeout","tabIndex","focus","event","Event","dispatchEvent","listenOnCloseButton","listenOnClickOutsideClose","addEventListener","currentTarget","activeElement","dataset","toggle","stopPropagation","targetDialog","target","activateDialog","listenOnEscapeKeyPressClose","modalElement","clickOutsideNotClose","handler","click","removeEventListener","parentNode","matches","closest","remove","dialogMainElement","key","altKey","ctrlKey","metaKey","shiftKey","escKeyNotClose"],"mappings":";;AAKA,MAAAA,WASAC,eAAAC,GACA,IAAAC,EAAAC,KACAC,EAAAC,SAAAC,cAAAL,GAEA,GACAG,GACAA,EAAAG,YACAH,EAAAG,UAAAC,SAAA,QACA,CACAJ,EAAAG,UAAAC,SAAA,oBACAH,SAAAI,KAAAF,UAAAG,IAAA,iBAGAN,EAAAG,UAAAG,IAAA,QAEAC,WAAA,WACAP,EAAAQ,SAAA,KACAR,EAAAS,SAEA,KAEA,IAAAC,EAAA,IAAAC,MAAA,sBACAX,EAAAY,cAAAF,GACAZ,EAAAe,oBAAAhB,GACAC,EAAAgB,0BAAAjB,IAQAD,cACA,IAAAE,EAAA,IAAAC,KAEAE,SAAAc,iBAAA,QAAA,SAAAL,GACA,GACAA,EAAAM,eACAN,EAAAM,cAAAC,eACAP,EAAAM,cAAAC,cAAAC,SACA,WAAAR,EAAAM,cAAAC,cAAAC,QAAAC,OACA,CACAT,EAAAU,kBACA,IAAAC,EAAAX,EAAAM,cAAAC,cAAAC,QAAAI,OACAD,GACAvB,EAAAyB,eAAAF,MAKAvB,EAAA0B,8BAUA5B,0BAAAyB,GACA,IAAAI,EAAAxB,SAAAC,cAAAmB,GAEAI,GACAA,EAAAP,SACAO,EAAAtB,aAEAsB,EAAAP,QAAAQ,sBACA,SAAAD,EAAAP,QAAAQ,uBAEAD,EAAAtB,UAAAC,SAAA,oBAGAqB,EAAAV,iBAAA,QAAA,SAAAY,EAAAjB,GACAA,EAAAY,SAAAG,GAEAf,EAAAY,OAAApB,cAAA,6BACAQ,EAAAY,OAAApB,cAAA,2BAAA0B,QACAH,EAAAI,oBAAA,QAAAF,MAaA/B,oBAAAyB,GAEApB,SAAAC,cAAAmB,GAAAN,iBAAA,QAAA,SAAAY,EAAAjB,GACA,IAAA,IAAAY,EAAAZ,EAAAY,OAAAA,GAAAA,GAAAvB,KAAAuB,EAAAA,EAAAQ,WAEA,GAAAR,EAAAS,QAAA,2BAAA,CACA,GAAAT,EAAAU,QAAA,SAAA,CACA/B,SAAAI,KAAAF,UAAA8B,OAAA,iBACA,IAAAC,EAAAZ,EAAAU,QAAA,SACA,GAAAE,EAAA,CACAA,EAAA/B,UAAA8B,OAAA,QACA,IAAAvB,EAAA,IAAAC,MAAA,sBACAuB,EAAAtB,cAAAF,GACAT,SAAAC,cAAAmB,GAAAQ,oBAAA,QAAAF,IAIA,SAYA/B,8BACAK,SAAAI,KAAAU,iBAAA,QAAA,SAAAL,GAEA,WAAAA,EAAAyB,MACA,IAAAzB,EAAA0B,SACA,IAAA1B,EAAA2B,UACA,IAAA3B,EAAA4B,UACA,IAAA5B,EAAA6B,UACAtC,SAAAC,cAAA,gCAKAD,SAAAC,cAAA,oBACAD,SAAAC,cAAA,mBAAAgB,SACA,SAAAjB,SAAAC,cAAA,mBAAAgB,QAAAsB,gBAEAvC,SAAAC,cAAA,6CACAD,SAAAC,cAAA,2CAAAO,QACAR,SAAAC,cAAA,2CAAA0B,SAIA3B,SAAAC,cAAA,0BAEAD,SAAAC,cAAA,qCACAD,SAAAC,cAAA,oCAAAgB,SACA,SAAAjB,SAAAC,cAAA,oCAAAgB,QAAAsB,gBAEAvC,SAAAC,cAAA,mDACAD,SAAAC,cAAA,iDAAAO,QACAR,SAAAC,cAAA,iDAAA0B","file":"rdta-dialog.min.js","sourcesContent":["/*! Rundiz template for admin v 2.0.19 \nLicense: MIT*//**\n * RDTA dialog\n */\n\n\nclass RDTADialog {\n\n\n    /**\n     * Activate (open) the dialog.\n     * \n     * @param {string} selector\n     * @returns {undefined}\n     */\n    activateDialog(selector) {\n        let thisClass = this;\n        let dialogOrModalElement = document.querySelector(selector);\n\n        if (\n            dialogOrModalElement &&\n            dialogOrModalElement.classList &&\n            !dialogOrModalElement.classList.contains('show')\n        ) {\n            if (dialogOrModalElement.classList.contains('rd-dialog-modal')) {\n                document.body.classList.add('rd-modal-open');\n            }\n            // show dialog or modal dialog\n            dialogOrModalElement.classList.add('show');\n            // focus on dialog/modal.\n            setTimeout(function() {\n                dialogOrModalElement.tabIndex = '-1';\n                dialogOrModalElement.focus();\n                //console.log('changed focus', document.activeElement);\n            }, 301);\n            // fire event.\n            let event = new Event('rdta.dialog.opened');\n            dialogOrModalElement.dispatchEvent(event);\n            thisClass.listenOnCloseButton(selector);\n            thisClass.listenOnClickOutsideClose(selector);\n        }\n    }// activateDialog\n\n\n    /**\n     * Initialize the dialog by listening on button clicked.\n     */\n    static init() {\n        let thisClass = new this();\n\n        document.addEventListener('click', function(event) {\n            if (\n                event.currentTarget &&\n                event.currentTarget.activeElement &&\n                event.currentTarget.activeElement.dataset &&\n                event.currentTarget.activeElement.dataset.toggle === 'dialog'\n            ) {\n                event.stopPropagation();\n                let targetDialog = event.currentTarget.activeElement.dataset.target;\n                if (targetDialog) {\n                    thisClass.activateDialog(targetDialog);\n                }\n            }\n        });\n\n        thisClass.listenOnEscapeKeyPressClose();\n    }// init\n\n\n\n    /**\n     * Listen on click outside dialog and then close if no attribute specified.\n     * \n     * @private\n     */\n    listenOnClickOutsideClose(targetDialog) {\n        let modalElement = document.querySelector(targetDialog);\n        if (\n            modalElement &&\n            modalElement.dataset &&\n            modalElement.classList &&\n            (\n                !modalElement.dataset.clickOutsideNotClose ||\n                modalElement.dataset.clickOutsideNotClose !== 'true'\n            ) &&\n            modalElement.classList.contains('rd-dialog-modal')\n        ) {\n            // if no html attribute `data-click-outside-not-close=\"true\"` and there is modal element then click outside to close the dialog.\n            modalElement.addEventListener('click', function handler(event) {\n                if (event.target === modalElement) {\n                    // if clicking target is on the modal element.\n                    if (event.target.querySelector('[data-dismiss=\"dialog\"]')) {\n                        event.target.querySelector('[data-dismiss=\"dialog\"]').click();\n                        modalElement.removeEventListener('click', handler);\n                    }\n                }\n            });\n        }\n    }// listenOnClickOutsideClose\n\n\n    /**\n     * Listen on close button (`data-dismiss=\"dialog\"`) and close the dialog that contain `show` class.\n     * \n     * @private\n     */\n    listenOnCloseButton(targetDialog) {\n        let thisClass = this;\n        document.querySelector(targetDialog).addEventListener('click', function handler(event) {\n            for (let target= event.target; target && target != this; target = target.parentNode) {\n                // loop parent nodes from the target to the delegation node\n                if (target.matches('[data-dismiss=\"dialog\"]')) {\n                    if (target.closest('.show')) {\n                        document.body.classList.remove('rd-modal-open');\n                        let dialogMainElement = target.closest('.show');\n                        if (dialogMainElement) {\n                            dialogMainElement.classList.remove('show');\n                            let event = new Event('rdta.dialog.closed');\n                            dialogMainElement.dispatchEvent(event);\n                            document.querySelector(targetDialog).removeEventListener('click', handler);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        });\n    }// listenOnCloseButton\n\n\n    /**\n     * Listen on esc key press then close if no attribute specified.\n     * \n     * @private\n     */\n    listenOnEscapeKeyPressClose() {\n        document.body.addEventListener('keyup', function handler(event) {\n            if (\n                event.key === 'Escape' &&\n                event.altKey === false &&\n                event.ctrlKey === false &&\n                event.metaKey === false &&\n                event.shiftKey === false &&\n                !document.querySelector('.rd-alertdialog-modal.show')// make sure that alert dialog is not opened. if opened, close it before close dialog.\n            ) {\n                // if target key press.\n                // close dialog that without modal.\n                if (\n                    document.querySelector('.rd-dialog.show') &&\n                    document.querySelector('.rd-dialog.show').dataset &&\n                    document.querySelector('.rd-dialog.show').dataset.escKeyNotClose !== 'true'\n                ) {\n                    if (document.querySelector('.rd-dialog.show [data-dismiss=\"dialog\"]')) {\n                        document.querySelector('.rd-dialog.show [data-dismiss=\"dialog\"]').focus();\n                        document.querySelector('.rd-dialog.show [data-dismiss=\"dialog\"]').click();\n                    }\n                }\n                // close dialog with modal.\n                if (document.querySelector('.rd-dialog-modal.show')) {\n                    if (\n                        document.querySelector('.rd-dialog-modal.show .rd-dialog') &&\n                        document.querySelector('.rd-dialog-modal.show .rd-dialog').dataset &&\n                        document.querySelector('.rd-dialog-modal.show .rd-dialog').dataset.escKeyNotClose !== 'true'\n                    ) {\n                        if (document.querySelector('.rd-dialog-modal.show [data-dismiss=\"dialog\"]')) {\n                            document.querySelector('.rd-dialog-modal.show [data-dismiss=\"dialog\"]').focus();\n                            document.querySelector('.rd-dialog-modal.show [data-dismiss=\"dialog\"]').click();\n                        }\n                    }\n                }\n            }\n        });\n    }// listenOnEscapeKeyPressClose\n\n\n}"]}