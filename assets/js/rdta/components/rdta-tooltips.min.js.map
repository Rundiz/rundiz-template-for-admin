{"version":3,"sources":["components/rdta-tooltips.js"],"names":["RDTATooltips","[object Object]","this","tippyInstance","tippyInstances","selector","options","thisClass","originalOptions","document","querySelectorAll","forEach","item","index","tooltipOptions","content","title","removeAttribute","template","dataset","placement","Object","assign","tippy","push"],"mappings":";;AAKA,MAAAA,aAGAC,cACAC,KAAAC,cACAD,KAAAE,eAAA,GAOAH,cACA,OAAAC,KAAAC,cAOAF,eACA,OAAAC,KAAAE,eAWAH,YAAAI,EAAAC,GACA,IAAAC,EAAA,IAAAL,KACAM,EAAAF,EAyBA,OAvBAG,SAAAC,iBAAAL,GAAAM,SAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAA,EAAAC,QAAAH,EAAAI,MACAJ,EAAAK,gBAAA,SACAH,EAAAI,SAAA,2HAEAN,EAAAO,QAAAC,YACAN,EAAAM,UAAAR,EAAAO,QAAAC,WAIAd,EADA,iBAAA,EACAe,OAAAC,OAAAR,EAAAN,GAEAM,EAGAP,EAAAJ,cAAAoB,MACAX,EACAN,GAEAC,EAAAH,eAAAoB,KAAAjB,EAAAJ,kBAGAI","file":"rdta-tooltips.min.js","sourcesContent":["/*! Rundiz template for admin v 2.1.15 \nLicense: MIT*//**\n * RDTA Tooltips\n */\n\n\nclass RDTATooltips {\n\n\n    constructor() {\n        this.tippyInstance;\n        this.tippyInstances = [];\n    }// constructor\n\n\n    /**\n     * Get latest tippy.js instance.\n     */\n    getInstance() {\n        return this.tippyInstance;\n    }// getInstance\n\n\n    /**\n     * Get all tippy.js instances.\n     */\n    getInstances() {\n        return this.tippyInstances;\n    }// getInstances\n\n\n    /**\n     * Initialize the tooltip.\n     * \n     * @param {string} selector\n     * @param {object} options\n     * @returns {object} Return this class instance.\n     */\n    static init(selector, options) {\n        let thisClass = new this();\n        let originalOptions = options;\n\n        document.querySelectorAll(selector).forEach(function(item, index) {\n            let tooltipOptions = {};\n            tooltipOptions.content = item.title;\n            item.removeAttribute('title');\n            tooltipOptions.template = '<div class=\"tooltip rd-tooltips\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>';\n\n            if (item.dataset.placement) {\n                tooltipOptions.placement = item.dataset.placement;\n            }\n\n            if (typeof(originalOptions) === 'object') {\n                options = Object.assign(tooltipOptions, originalOptions);\n            } else {\n                options = tooltipOptions;\n            }\n\n            thisClass.tippyInstance = tippy(\n                item, \n                options\n            );\n            thisClass.tippyInstances.push(thisClass.tippyInstance);\n        });\n\n        return thisClass;\n    }// init\n\n\n}"]}