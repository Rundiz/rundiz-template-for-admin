{"version":3,"sources":["components/rdta-tabs.js"],"names":["RDTATabs","[object Object]","selector","options","thisClass","this","document","querySelectorAll","forEach","item","index","classList","add","querySelector","i","children","length","contains","activeTabs","targetTab","dataset","targettab","hash","activateTabContent","targetTabContent","remove","parentElement","url","xhr","XMLHttpRequest","onreadystatechange","readyState","status","innerHTML","responseText","open","send","defaultOptions","Object","assign","addRequiredClasses","listenOnTabNav","addEventListener","event","target","parentNode","matches","preventDefault","getAttribute","charAt","ajaxTabContent","closest"],"mappings":";;AAKA,MAAAA,SAWAC,mBAAAC,EAAAC,GACA,IAAAC,EAAAC,KAEAC,SAAAC,iBAAAL,GAAAM,QAAA,SAAAC,EAAAC,GAIAD,EAAAE,UAAAC,IAAA,WACAH,EAAAI,cAAA,MACAJ,EAAAI,cAAA,MAAAF,UAAAC,IAAA,eACAH,EAAAI,cAAA,OACAJ,EAAAI,cAAA,MAAAF,UAAAC,IAAA,eAEA,IAAA,IAAAE,EAAA,EAAAA,EAAAL,EAAAM,SAAAC,OAAAF,IAEAL,EAAAM,SAAAD,GAAAH,UAAAM,SAAA,gBAGAR,EAAAM,SAAAD,GAAAH,UAAAC,IAAA,mBAKA,IAAA,IAAAE,EAAA,EAAAA,EAAAL,EAAAI,cAAA,MAAAE,SAAAC,OAAAF,IAEA,GAAAA,IAAAX,EAAAe,WAAA,CACA,IAAAC,EAAA,GACAV,EAAAI,cAAA,MAAAE,SAAAD,GAAAD,cAAA,KAAAO,QAAAC,UACAF,EAAAV,EAAAI,cAAA,MAAAE,SAAAD,GAAAD,cAAA,KAAAO,QAAAC,UACAZ,EAAAI,cAAA,MAAAE,SAAAD,GAAAD,cAAA,KAAAS,OACAH,EAAAV,EAAAI,cAAA,MAAAE,SAAAD,GAAAD,cAAA,KAAAS,MAEAH,GACAf,EAAAmB,mBAAAd,EAAAU,GAEA,SAeAlB,mBAAAC,EAAAsB,GACA,IAAAA,EACA,OAAA,EAGA,IAAA,IAAAV,EAAA,EAAAA,EAAAZ,EAAAa,SAAAC,OAAAF,IACAZ,EAAAa,SAAAD,GAAAH,UAAAM,SAAA,gBAEAf,EAAAa,SAAAD,GAAAH,UAAAc,OAAA,UAIAvB,EAAAK,iBAAA,QAAAC,QAAA,SAAAC,EAAAC,GACAD,EAAAa,OAAAE,GAAAf,EAAAW,QAAAC,YAAAG,EACAf,EAAAiB,cAAAf,UAAAC,IAAA,UAEAH,EAAAiB,cAAAf,UAAAc,OAAA,YAIAvB,EAAAW,cAAAW,IACAtB,EAAAW,cAAAW,GAAAb,UAAAC,IAAA,UAcAX,eAAA0B,EAAAzB,EAAAsB,GACA,IAAAI,EAAA,IAAAC,eAEAD,EAAAE,mBAAA,WACA,IAAAzB,KAAA0B,YAAA,MAAA1B,KAAA2B,QACA9B,EAAAW,cAAAW,KACAtB,EAAAW,cAAAW,GAAAS,UAAA5B,KAAA6B,eAIAN,EAAAO,KAAA,MAAAR,GACAC,EAAAQ,OAWAnC,YAAAC,EAAAC,GACA,IAAAkC,EAAA,CACAnB,WAAA,GAGAf,EADA,iBAAA,EACAmC,OAAAC,OAAAF,EAAAlC,GAEAkC,EAGA,IAAAjC,EAAA,IAAAC,KACAD,EAAAoC,mBAAAtC,EAAAC,GACAC,EAAAqC,eAAAvC,EAAAC,GAYAF,eAAAC,EAAAC,GACA,IAAAC,EAAAC,KAEAC,SAAAoC,iBAAA,QAAA,SAAAC,GAGA,IAAA,IAAAC,EAAAD,EAAAC,OAAAA,GAAAA,GAAAvC,KAAAuC,EAAAA,EAAAC,WAEA,GAAAD,EAAAE,QAAA5C,EAAA,mBAAA,CACAyC,EAAAI,iBACA,IAAA5B,EAAA,GACAyB,EAAAxB,QAAAC,UACAF,EAAAyB,EAAAxB,QAAAC,UACAuB,EAAAtB,OACAH,EAAAyB,EAAAtB,MAGAsB,EAAAI,aAAA,SAAA,MAAAJ,EAAAI,aAAA,QAAAC,OAAA,KAAAL,EAAAtB,MACAlB,EAAA8C,eAAAN,EAAAI,aAAA,QAAAJ,EAAAO,QAAAjD,GAAAiB,GAGAf,EAAAmB,mBAAAqB,EAAAO,QAAAjD,GAAAiB,GACA","file":"rdta-tabs.min.js","sourcesContent":["/*! Rundiz template for admin v 2.0.6 \nLicense: MIT*//**\n * RDTA Tabs\n */\n\n\nclass RDTATabs {\n\n\n    /**\n     * Add required CSS classes.\n     * \n     * @private Do not call this, just call `init()`.\n     * @param {type} selector\n     * @param {type} options\n     * @returns {undefined}\n     */\n    addRequiredClasses(selector, options) {\n        let thisClass = this;\n\n        document.querySelectorAll(selector).forEach(function(item, index) {\n            // start looping each selector.\n\n            // add required class name.\n            item.classList.add('rd-tabs');\n            if (item.querySelector('ul')) {\n                item.querySelector('ul').classList.add('rd-tabs-nav');\n            } else if (item.querySelector('ol')) {\n                item.querySelector('ol').classList.add('rd-tabs-nav');\n            }\n            for (let i = 0; i < item.children.length; i++) {\n                // loop each children of selector.\n                if (!item.children[i].classList.contains('rd-tabs-nav')) {\n                    // if children of item is not tab nav.\n                    // add tabs content class.\n                    item.children[i].classList.add('rd-tabs-content');\n                }\n            }\n\n            // set active class\n            for (let i = 0; i < item.querySelector('ul').children.length; i++) {\n                // loop each li.\n                if (i === options.activeTabs) {\n                    let targetTab = '';\n                    if (item.querySelector('ul').children[i].querySelector('a').dataset.targettab) {\n                        targetTab = item.querySelector('ul').children[i].querySelector('a').dataset.targettab;\n                    } else if (item.querySelector('ul').children[i].querySelector('a').hash) {\n                        targetTab = item.querySelector('ul').children[i].querySelector('a').hash;\n                    }\n                    if (targetTab) {\n                        thisClass.activateTabContent(item, targetTab);\n                    }\n                    break;\n                }\n            }\n        });\n    }// addRequiredClasses\n\n\n    /**\n     * Activate tab content.\n     * \n     * @private Do not call this, just call `init()`.\n     * @param {object} selector Object of each tab main element.\n     * @param {string} targetTabContent\n     * @returns {undefined}\n     */\n    activateTabContent(selector, targetTabContent) {\n        if (!targetTabContent) {\n            return false;\n        }\n\n        for (let i = 0; i < selector.children.length; i++) {\n            if (!selector.children[i].classList.contains('rd-tabs-nav')) {\n                // if children of item is not tab nav.\n                selector.children[i].classList.remove('active');\n            }\n        }\n\n        selector.querySelectorAll('ul a').forEach(function(item, index) {\n            if (item.hash === targetTabContent || item.dataset.targettab === targetTabContent) {\n                item.parentElement.classList.add('active');\n            } else {\n                item.parentElement.classList.remove('active');\n            }\n        });\n        // set active on tab content.\n        if (selector.querySelector(targetTabContent)) {\n            selector.querySelector(targetTabContent).classList.add('active');\n        }\n    }// activateTabContent\n\n\n    /**\n     * Ajax and set content to target.\n     * \n     * @private Do not call this, just call `init()`.\n     * @param {string} url\n     * @param {object} selector Object of each tab main element.\n     * @param {string} targetTabContent\n     * @returns {undefined}\n     */\n    ajaxTabContent(url, selector, targetTabContent) {\n        let xhr = new XMLHttpRequest();\n\n        xhr.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                if (selector.querySelector(targetTabContent)) {\n                    selector.querySelector(targetTabContent).innerHTML = this.responseText;\n                }\n            }\n        };\n        xhr.open('GET', url);\n        xhr.send();\n    }// ajaxTabContent\n\n\n    /**\n     * Initialize RDTA tabs.\n     * \n     * @param {string} selector\n     * @param {object} options\n     * @returns {undefined}\n     */\n    static init(selector, options) {\n        let defaultOptions = {\n            'activeTabs': 0,\n        };\n        if (typeof(options) === 'object') {\n            options = Object.assign(defaultOptions, options);\n        } else {\n            options = defaultOptions;\n        }\n\n        let thisClass = new this();\n        thisClass.addRequiredClasses(selector, options);\n        thisClass.listenOnTabNav(selector, options);\n    }// init\n\n\n    /**\n     * Listen on tab nav click and activate tab content.\n     * \n     * @private Do not call this, just call `init()`.\n     * @param {type} selector\n     * @param {type} options\n     * @returns {undefined}\n     */\n    listenOnTabNav(selector, options) {\n        let thisClass = this;\n\n        document.addEventListener('click', function(event) {\n            // match selector.\n            // @link https://stackoverflow.com/a/25248515/128761 Original source code.\n            for (let target= event.target; target && target != this; target = target.parentNode) {\n                // loop parent nodes from the target to the delegation node\n                if (target.matches(selector + ' .rd-tabs-nav a')) {\n                    event.preventDefault();\n                    let targetTab = '';\n                    if (target.dataset.targettab) {\n                        targetTab = target.dataset.targettab;\n                    } else if (target.hash) {\n                        targetTab = target.hash;\n                    }\n\n                    if (target.getAttribute('href') && target.getAttribute('href').charAt(0) !== '#' && !target.hash) {\n                        thisClass.ajaxTabContent(target.getAttribute('href'), target.closest(selector), targetTab)\n                    }\n\n                    thisClass.activateTabContent(target.closest(selector), targetTab);\n                    break;\n                }\n            }\n        });\n    }// listenOnTabNav\n\n\n}"]}