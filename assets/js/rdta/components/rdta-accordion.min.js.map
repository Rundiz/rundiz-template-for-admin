{"version":3,"sources":["components/rdta-accordion.js"],"names":["RDTAAccordion","[object Object]","selector","this","listenOnClickHeader","document","addEventListener","event","target","parentNode","matches","preventDefault","closest","accordionGroup","targetAccordionBody","querySelector","dataset","classList","toggle","contains","add","setAttribute","remove","accordionOne","querySelectorAll","forEach","item","index","undefined"],"mappings":";;AAKA,MAAAA,cASAC,YAAAC,GACA,IAAAA,EACA,OAAA,GAGA,IAAAC,MAEAC,oBAAAF,GAUAD,oBAAAC,GACAG,SAAAC,iBAAA,SAAA,SAAAC,GAGA,IAAA,IAAAC,EAAAD,EAAAC,OAAAA,GAAAA,GAAAL,KAAAK,EAAAA,EAAAC,WAAA,CAEA,GAAAD,EAAAE,QAAAR,EAAA,gCACAK,EAAAI,iBACAH,EAAAI,QAAA,wBAAA,CACA,IAAAC,EAAAL,EAAAI,QAAA,uBACA,IAAAE,EAAAD,EAAAE,cAAAP,EAAAQ,QAAAR,QACAM,EAAAG,UAAAC,OAAA,YAEAJ,EAAAG,UAAAE,SAAA,aACAX,EAAAI,QAAA,wBAAAK,UAAAG,IAAA,UACAZ,EAAAI,QAAA,kDAAAS,aAAA,iBAAA,KAEAb,EAAAI,QAAA,wBAAAK,UAAAK,OAAA,UACAd,EAAAI,QAAA,kDAAAS,aAAA,iBAAA,IAKA,GAAAb,EAAAE,QAAAR,IAAA,SAAAM,EAAAQ,QAAAO,aAAA,CACAf,EAAAgB,iBAAA,uBAAAC,SAAA,SAAAC,EAAAC,GACAD,IAAAb,IACAa,EAAAX,cAAA,wBAAAE,UAAAK,OAAA,UACAI,EAAAX,cAAA,kDAAAM,aAAA,iBAAA,GACAK,EAAAX,cAAA,sBAAAE,UAAAK,OAAA,gBAGA,OAGAT,OAAAe","file":"rdta-accordion.min.js","sourcesContent":["/*! Rundiz template for admin v 2.0.25 \nLicense: MIT*//**\n * RDTA Accordion\n */\n\n\nclass RDTAAccordion {\n\n\n    /**\n     * Initialize RDTA accordion.\n     * \n     * @param {string} selector\n     * @returns {undefined}\n     */\n    static init(selector) {\n        if (!selector) {\n            return false;\n        }\n\n        let thisClass = new this();\n\n        thisClass.listenOnClickHeader(selector);\n    }// init\n\n\n    /**\n     * Listen on click accordion header.\n     * \n     * @param {string} selector\n     * @returns {undefined}\n     */\n    listenOnClickHeader(selector) {\n        document.addEventListener('click', function(event) {\n            // match selector.\n            // @link https://stackoverflow.com/a/25248515/128761 Original source code.\n            for (let target= event.target; target && target != this; target = target.parentNode) {\n                // loop parent nodes from the target to the delegation node\n                if (target.matches(selector + ' [data-toggle=\"accordion\"]')) {\n                    event.preventDefault();\n                    if (target.closest('.rd-accordion-group')) {\n                        var accordionGroup = target.closest('.rd-accordion-group');\n                        let targetAccordionBody = accordionGroup.querySelector(target.dataset.target);\n                        targetAccordionBody.classList.toggle('expanded');\n\n                        if (targetAccordionBody.classList.contains('expanded')) {\n                            target.closest('.rd-accordion-header').classList.add('active');\n                            target.closest('.rd-accordion-header [data-toggle=\"accordion\"]').setAttribute('aria-expanded', true);\n                        } else {\n                            target.closest('.rd-accordion-header').classList.remove('active');\n                            target.closest('.rd-accordion-header [data-toggle=\"accordion\"]').setAttribute('aria-expanded', false);\n                        }\n                    }\n                }\n\n                if (target.matches(selector) && target.dataset.accordionOne === 'true') {\n                    target.querySelectorAll('.rd-accordion-group').forEach(function(item, index) {\n                        if (item !== accordionGroup) {\n                            item.querySelector('.rd-accordion-header').classList.remove('active');\n                            item.querySelector('.rd-accordion-header [data-toggle=\"accordion\"]').setAttribute('aria-expanded', false);\n                            item.querySelector('.rd-accordion-body').classList.remove('expanded');\n                        }\n                    });\n                    break;\n                }\n            }\n            accordionGroup = undefined;\n        });\n    }// listenOnClickHeader\n\n\n}"]}